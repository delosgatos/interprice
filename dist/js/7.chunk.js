(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{437:function(module,__webpack_exports__,__webpack_require__){"use strict";eval('// extracted by mini-css-extract-plugin\n\n    if(true) {\n      // 1664387175024\n      var cssReload = __webpack_require__(50)(module.i, {"locals":false});\n      module.hot.dispose(cssReload);\n      module.hot.accept(undefined, cssReload);\n    }\n  //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDM3LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vc3JjL2NvbXBvbmVudHMvQXBwVGFibGVSb3cudnVlP2I1NzQiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luXG5leHBvcnQge307XG4gICAgaWYobW9kdWxlLmhvdCkge1xuICAgICAgLy8gMTY2NDM4NzE3NTAyNFxuICAgICAgdmFyIGNzc1JlbG9hZCA9IHJlcXVpcmUoXCIvVXNlcnMvZGVsb3NnYXRvcy9zaXRlcy92dWUvaW50ZXJwcmljZS9ub2RlX21vZHVsZXMvbWluaS1jc3MtZXh0cmFjdC1wbHVnaW4vZGlzdC9obXIvaG90TW9kdWxlUmVwbGFjZW1lbnQuanNcIikobW9kdWxlLmlkLCB7XCJsb2NhbHNcIjpmYWxzZX0pO1xuICAgICAgbW9kdWxlLmhvdC5kaXNwb3NlKGNzc1JlbG9hZCk7XG4gICAgICBtb2R1bGUuaG90LmFjY2VwdCh1bmRlZmluZWQsIGNzc1JlbG9hZCk7XG4gICAgfVxuICAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///437\n')},438:function(module,__webpack_exports__,__webpack_require__){"use strict";eval('// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, "customClasses", function() { return /* reexport */ customClasses; });\n\n// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??ref--5!./node_modules/vue-loader/lib??vue-loader-options!./src/components/AppTableRow.vue?vue&type=template&id=cafff7e0&\nvar render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _vm.row\n    ? _c(\n        "Fragment",\n        { attrs: { name: "body" } },\n        _vm._l(_vm.subrows, function (subrow, sri) {\n          return _c(\n            "tr",\n            {\n              key: _vm.row.id + "_" + sri,\n              ref: "trRow",\n              refInFor: true,\n              class: {\n                inactive:\n                  !subrow.hasData &&\n                  subrow.type !== "subdata" &&\n                  subrow.type !== "total",\n                subrow: subrow.type === "subdata",\n                total: subrow.type === "total",\n                mainrow: subrow.type !== "subdata",\n              },\n              attrs: { role: "rowgroup" },\n            },\n            _vm._l(_vm.columnsKeyOrder, function (columnKey, index) {\n              return _c(\n                "td",\n                {\n                  key: columnKey + "_" + _vm.row.id + "_" + sri + "_" + index,\n                  ref: columnKey,\n                  refInFor: true,\n                  class: [\n                    _vm.customClasses(columnKey),\n                    _vm.name + "_" + columnKey + "_row_column",\n                    !!subrow[columnKey + "_MIN"] ? "min-value" : "",\n                  ],\n                  style: {},\n                  attrs: { role: "cell" },\n                },\n                [\n                  columnKey === "date"\n                    ? _c("div", { staticClass: "justify-start d-flex" }, [\n                        _vm._v(\n                          "\\n              " +\n                            _vm._s(_vm._f("shortWordDate")(subrow[columnKey])) +\n                            "\\n          "\n                        ),\n                      ])\n                    : columnKey === "name"\n                    ? _c("div", { staticClass: "justify-start d-flex" }, [\n                        _vm._v(\n                          "\\n              " +\n                            _vm._s(subrow[columnKey]) +\n                            "\\n          "\n                        ),\n                      ])\n                    : columnKey === ">"\n                    ? _c("div", { staticClass: "folded" }, [\n                        subrow.hasData\n                          ? _c(\n                              "a",\n                              {\n                                attrs: { href: "#" },\n                                on: {\n                                  click: function ($event) {\n                                    $event.preventDefault()\n                                    return _vm.foldedToggle()\n                                  },\n                                },\n                              },\n                              [\n                                _vm.folded\n                                  ? _c("v-icon", [_vm._v("mdi-menu-right")])\n                                  : _vm._e(),\n                                _vm._v(" "),\n                                !_vm.folded\n                                  ? _c("v-icon", [_vm._v("mdi-menu-down")])\n                                  : _vm._e(),\n                              ],\n                              1\n                            )\n                          : _vm._e(),\n                      ])\n                    : (subrow.Currency || subrow.type === "total") &&\n                      (subrow.Display === "Spread" ||\n                        subrow.Display === "3MLSpread")\n                    ? _c("div", [\n                        parseInt(subrow[columnKey]) > 0\n                          ? _c("span", [\n                              _vm._v(\n                                "\\n                  +" +\n                                  _vm._s(subrow[columnKey]) +\n                                  "bp\\n              "\n                              ),\n                            ])\n                          : parseInt(subrow[columnKey]) < 0\n                          ? _c("span", [\n                              _vm._v(\n                                "\\n                  -" +\n                                  _vm._s(subrow[columnKey]) +\n                                  "bp\\n              "\n                              ),\n                            ])\n                          : _vm._e(),\n                      ])\n                    : (subrow.Currency || subrow.type === "total") &&\n                      subrow[columnKey]\n                    ? _c("div", [\n                        _vm._v(\n                          "\\n              " +\n                            _vm._s(Number(subrow[columnKey]).toFixed(3)) +\n                            "%\\n          "\n                        ),\n                      ])\n                    : _vm._e(),\n                ]\n              )\n            }),\n            0\n          )\n        }),\n        0\n      )\n    : _vm._e()\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\n\n// CONCATENATED MODULE: ./src/components/AppTableRow.vue?vue&type=template&id=cafff7e0&\n\n// CONCATENATED MODULE: ./node_modules/vue-frag/dist/frag.esm.js\nvar $placeholder = Symbol();\n\nvar $fakeParent = Symbol();\n\nvar nextSiblingPatched = Symbol();\n\nvar childNodesPatched = Symbol();\n\nvar isFrag = function isFrag(node) {\n    return "frag" in node;\n};\n\nfunction patchParentNode(node, fakeParent) {\n    if ($fakeParent in node) {\n        return;\n    }\n    node[$fakeParent] = fakeParent;\n    Object.defineProperty(node, "parentNode", {\n        get: function get() {\n            return this[$fakeParent] || this.parentElement;\n        }\n    });\n}\n\nfunction patchNextSibling(node) {\n    if (nextSiblingPatched in node) {\n        return;\n    }\n    node[nextSiblingPatched] = true;\n    Object.defineProperty(node, "nextSibling", {\n        get: function get() {\n            var childNodes = this.parentNode.childNodes;\n            var index = childNodes.indexOf(this);\n            if (index > -1) {\n                return childNodes[index + 1] || null;\n            }\n            return null;\n        }\n    });\n}\n\nfunction getTopFragment(node, fromParent) {\n    while (node.parentNode !== fromParent) {\n        var _node = node, parentNode = _node.parentNode;\n        if (parentNode) {\n            node = parentNode;\n        }\n    }\n    return node;\n}\n\nvar getChildNodes;\n\nfunction getChildNodesWithFragments(node) {\n    if (!getChildNodes) {\n        var childNodesDescriptor = Object.getOwnPropertyDescriptor(Node.prototype, "childNodes");\n        getChildNodes = childNodesDescriptor.get;\n    }\n    var realChildNodes = getChildNodes.apply(node);\n    var childNodes = Array.from(realChildNodes).map((function(childNode) {\n        return getTopFragment(childNode, node);\n    }));\n    return childNodes.filter((function(childNode, index) {\n        return childNode !== childNodes[index - 1];\n    }));\n}\n\nfunction patchChildNodes(node) {\n    if (childNodesPatched in node) {\n        return;\n    }\n    node[childNodesPatched] = true;\n    Object.defineProperties(node, {\n        childNodes: {\n            get: function get() {\n                return this.frag || getChildNodesWithFragments(this);\n            }\n        },\n        firstChild: {\n            get: function get() {\n                return this.childNodes[0] || null;\n            }\n        }\n    });\n    node.hasChildNodes = function() {\n        return this.childNodes.length > 0;\n    };\n}\n\nfunction before() {\n    var _this$frag$;\n    (_this$frag$ = this.frag[0]).before.apply(_this$frag$, arguments);\n}\n\nfunction remove() {\n    var frag = this.frag;\n    var removed = frag.splice(0, frag.length);\n    removed.forEach((function(node) {\n        node.remove();\n    }));\n}\n\nvar getFragmentLeafNodes = function getFragmentLeafNodes(children) {\n    var _Array$prototype;\n    return (_Array$prototype = Array.prototype).concat.apply(_Array$prototype, children.map((function(childNode) {\n        return isFrag(childNode) ? getFragmentLeafNodes(childNode.frag) : childNode;\n    })));\n};\n\nfunction addPlaceholder(node, insertBeforeNode) {\n    var placeholder = node[$placeholder];\n    insertBeforeNode.before(placeholder);\n    patchParentNode(placeholder, node);\n    node.frag.unshift(placeholder);\n}\n\nfunction removeChild(node) {\n    if (isFrag(this)) {\n        var hasChildInFragment = this.frag.indexOf(node);\n        if (hasChildInFragment > -1) {\n            var _this$frag$splice = this.frag.splice(hasChildInFragment, 1), removedNode = _this$frag$splice[0];\n            if (this.frag.length === 0) {\n                addPlaceholder(this, removedNode);\n            }\n            node.remove();\n        }\n    } else {\n        var children = getChildNodesWithFragments(this);\n        var hasChild = children.indexOf(node);\n        if (hasChild > -1) {\n            node.remove();\n        }\n    }\n    return node;\n}\n\nfunction insertBefore(insertNode, insertBeforeNode) {\n    var _this = this;\n    var insertNodes = insertNode.frag || [ insertNode ];\n    if (isFrag(this)) {\n        var _frag = this.frag;\n        if (insertBeforeNode) {\n            var index = _frag.indexOf(insertBeforeNode);\n            if (index > -1) {\n                _frag.splice.apply(_frag, [ index, 0 ].concat(insertNodes));\n                insertBeforeNode.before.apply(insertBeforeNode, insertNodes);\n            }\n        } else {\n            var _lastNode = _frag[_frag.length - 1];\n            _frag.push.apply(_frag, insertNodes);\n            _lastNode.after.apply(_lastNode, insertNodes);\n        }\n        removePlaceholder(this);\n    } else if (insertBeforeNode) {\n        if (this.childNodes.includes(insertBeforeNode)) {\n            insertBeforeNode.before.apply(insertBeforeNode, insertNodes);\n        }\n    } else {\n        this.append.apply(this, insertNodes);\n    }\n    insertNodes.forEach((function(node) {\n        patchParentNode(node, _this);\n    }));\n    var lastNode = insertNodes[insertNodes.length - 1];\n    patchNextSibling(lastNode);\n    return insertNode;\n}\n\nfunction appendChild(node) {\n    var frag = this.frag;\n    var lastChild = frag[frag.length - 1];\n    lastChild.after(node);\n    patchParentNode(node, this);\n    removePlaceholder(this);\n    frag.push(node);\n    return node;\n}\n\nfunction removePlaceholder(node) {\n    var placeholder = node[$placeholder];\n    if (node.frag[0] === placeholder) {\n        node.frag.shift();\n        placeholder.remove();\n    }\n}\n\nvar frag = {\n    inserted: function inserted(element) {\n        var parentNode = element.parentNode, nextSibling = element.nextSibling, previousSibling = element.previousSibling;\n        var childNodes = Array.from(element.childNodes);\n        var placeholder = document.createComment("");\n        if (childNodes.length === 0) {\n            childNodes.push(placeholder);\n        }\n        element.frag = childNodes;\n        element[$placeholder] = placeholder;\n        var fragment = document.createDocumentFragment();\n        fragment.append.apply(fragment, getFragmentLeafNodes(childNodes));\n        element.replaceWith(fragment);\n        childNodes.forEach((function(node) {\n            patchParentNode(node, element);\n            patchNextSibling(node);\n        }));\n        patchChildNodes(element);\n        Object.assign(element, {\n            remove: remove,\n            appendChild: appendChild,\n            insertBefore: insertBefore,\n            removeChild: removeChild,\n            before: before\n        });\n        Object.defineProperty(element, "innerHTML", {\n            set: function set(htmlString) {\n                var _this2 = this;\n                var domify = document.createElement("div");\n                domify.innerHTML = htmlString;\n                var oldNodesIndex = this.frag.length;\n                Array.from(domify.childNodes).forEach((function(node) {\n                    _this2.appendChild(node);\n                }));\n                domify.append.apply(domify, this.frag.splice(0, oldNodesIndex));\n            },\n            get: function get() {\n                return "";\n            }\n        });\n        if (parentNode) {\n            Object.assign(parentNode, {\n                removeChild: removeChild,\n                insertBefore: insertBefore\n            });\n            patchParentNode(element, parentNode);\n            patchChildNodes(parentNode);\n        }\n        if (nextSibling) {\n            patchNextSibling(element);\n        }\n        if (previousSibling) {\n            patchNextSibling(previousSibling);\n        }\n    },\n    unbind: function unbind(element) {\n        element.remove();\n    }\n};\n\nvar fragment = {\n    name: "Fragment",\n    directives: {\n        frag: frag\n    },\n    render: function render(h) {\n        return h("div", {\n            directives: [ {\n                name: "frag"\n            } ]\n        }, this.$slots["default"]);\n    }\n};\n\n\n\n// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./src/components/AppTableRow.vue?vue&type=script&lang=js&\n\nconst customClasses = field => {\n  const typeClasses = (field => {\n    switch (field) {\n      // left\n      case \'name\':\n      case \'date\':\n        return \'td-text-left\';\n      // right\n      //case \'date\': return \'td-text-right\';\n\n      default:\n        return \'td-text-center\';\n    }\n  })(field);\n\n  return typeClasses;\n};\n\nconst customWidth = ({\n  field,\n  name\n}) => {\n  switch (field) {\n    case \'date\':\n      return 80;\n\n    case \'name\':\n      return 200;\n\n    default:\n      return 150;\n  }\n};\n\n/* harmony default export */ var AppTableRowvue_type_script_lang_js_ = ({\n  components: {\n    Fragment: fragment\n  },\n  props: {\n    row: {\n      type: Object,\n      required: true\n    },\n    rowCount: {\n      type: Number\n    },\n    columnsKeyOrder: {\n      type: Array,\n      required: true\n    },\n    columnsKeyOrderType: {\n      type: Object\n    },\n    name: {\n      type: String,\n      required: true\n    },\n    columnsWidth: {\n      type: Array,\n      required: true\n    },\n    sortParams: {\n      type: Object\n    }\n  },\n\n  data() {\n    return {\n      folded: true,\n      addrows: []\n    };\n  },\n\n  computed: {\n    subrows() {\n      return [this.row, ...this.addrows];\n    },\n\n    Display: {\n      cache: false,\n      get: function () {\n        return this.row.Display;\n      }\n    }\n  },\n  watch: {\n    \'row\': {\n      handler(newVal, oldVal) {\n        this.addrows = [];\n\n        if (!this.folded) {\n          this.updateDisplay();\n        }\n      }\n\n    },\n\n    sortParams(newVal, oldVal) {\n      this.folded = true;\n      this.addrows = [];\n    }\n\n  },\n  methods: {\n    customClasses,\n\n    foldedToggle() {\n      this.folded = !this.folded;\n      this.addrows = [];\n\n      if (!this.folded) {\n        this.updateDisplay();\n      }\n    },\n\n    updateDisplay() {\n      this.addrows = [];\n\n      if (!this.row.groups) {\n        return false;\n      }\n\n      this.row.groups.forEach((g, gi) => {\n        if (g.name === this.row.Display) {\n          return;\n        }\n\n        this.addrows.push(g);\n      });\n    }\n\n  }\n});\n// CONCATENATED MODULE: ./src/components/AppTableRow.vue?vue&type=script&lang=js&\n /* harmony default export */ var components_AppTableRowvue_type_script_lang_js_ = (AppTableRowvue_type_script_lang_js_); \n// EXTERNAL MODULE: ./node_modules/mini-css-extract-plugin/dist/loader.js!./node_modules/css-loader/dist/cjs.js??ref--3-1!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/sass-loader/dist/cjs.js??ref--3-2!./node_modules/vue-loader/lib??vue-loader-options!./src/components/AppTableRow.vue?vue&type=style&index=0&id=cafff7e0&prod&lang=scss&\nvar AppTableRowvue_type_style_index_0_id_cafff7e0_prod_lang_scss_ = __webpack_require__(437);\n\n// CONCATENATED MODULE: ./src/components/AppTableRow.vue?vue&type=style&index=0&id=cafff7e0&prod&lang=scss&\n\n// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js\nvar componentNormalizer = __webpack_require__(51);\n\n// CONCATENATED MODULE: ./src/components/AppTableRow.vue\n\n\n\n\n\n\n/* normalize component */\n\nvar component = Object(componentNormalizer["a" /* default */])(\n  components_AppTableRowvue_type_script_lang_js_,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* harmony default export */ var AppTableRow = __webpack_exports__["default"] = (component.exports);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDM4LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vc3JjL2NvbXBvbmVudHMvQXBwVGFibGVSb3cudnVlPzAxOTYiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3Z1ZS1mcmFnL2Rpc3QvZnJhZy5lc20uanM/NzZlNiIsIndlYnBhY2s6Ly8vQXBwVGFibGVSb3cudnVlPzg4Y2EiLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvbXBvbmVudHMvQXBwVGFibGVSb3cudnVlPzc3NDEiLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvbXBvbmVudHMvQXBwVGFibGVSb3cudnVlPzNlNGUiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIHJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgdmFyIF92bSA9IHRoaXMsXG4gICAgX2MgPSBfdm0uX3NlbGYuX2NcbiAgcmV0dXJuIF92bS5yb3dcbiAgICA/IF9jKFxuICAgICAgICBcIkZyYWdtZW50XCIsXG4gICAgICAgIHsgYXR0cnM6IHsgbmFtZTogXCJib2R5XCIgfSB9LFxuICAgICAgICBfdm0uX2woX3ZtLnN1YnJvd3MsIGZ1bmN0aW9uIChzdWJyb3csIHNyaSkge1xuICAgICAgICAgIHJldHVybiBfYyhcbiAgICAgICAgICAgIFwidHJcIixcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAga2V5OiBfdm0ucm93LmlkICsgXCJfXCIgKyBzcmksXG4gICAgICAgICAgICAgIHJlZjogXCJ0clJvd1wiLFxuICAgICAgICAgICAgICByZWZJbkZvcjogdHJ1ZSxcbiAgICAgICAgICAgICAgY2xhc3M6IHtcbiAgICAgICAgICAgICAgICBpbmFjdGl2ZTpcbiAgICAgICAgICAgICAgICAgICFzdWJyb3cuaGFzRGF0YSAmJlxuICAgICAgICAgICAgICAgICAgc3Vicm93LnR5cGUgIT09IFwic3ViZGF0YVwiICYmXG4gICAgICAgICAgICAgICAgICBzdWJyb3cudHlwZSAhPT0gXCJ0b3RhbFwiLFxuICAgICAgICAgICAgICAgIHN1YnJvdzogc3Vicm93LnR5cGUgPT09IFwic3ViZGF0YVwiLFxuICAgICAgICAgICAgICAgIHRvdGFsOiBzdWJyb3cudHlwZSA9PT0gXCJ0b3RhbFwiLFxuICAgICAgICAgICAgICAgIG1haW5yb3c6IHN1YnJvdy50eXBlICE9PSBcInN1YmRhdGFcIixcbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgYXR0cnM6IHsgcm9sZTogXCJyb3dncm91cFwiIH0sXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgX3ZtLl9sKF92bS5jb2x1bW5zS2V5T3JkZXIsIGZ1bmN0aW9uIChjb2x1bW5LZXksIGluZGV4KSB7XG4gICAgICAgICAgICAgIHJldHVybiBfYyhcbiAgICAgICAgICAgICAgICBcInRkXCIsXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAga2V5OiBjb2x1bW5LZXkgKyBcIl9cIiArIF92bS5yb3cuaWQgKyBcIl9cIiArIHNyaSArIFwiX1wiICsgaW5kZXgsXG4gICAgICAgICAgICAgICAgICByZWY6IGNvbHVtbktleSxcbiAgICAgICAgICAgICAgICAgIHJlZkluRm9yOiB0cnVlLFxuICAgICAgICAgICAgICAgICAgY2xhc3M6IFtcbiAgICAgICAgICAgICAgICAgICAgX3ZtLmN1c3RvbUNsYXNzZXMoY29sdW1uS2V5KSxcbiAgICAgICAgICAgICAgICAgICAgX3ZtLm5hbWUgKyBcIl9cIiArIGNvbHVtbktleSArIFwiX3Jvd19jb2x1bW5cIixcbiAgICAgICAgICAgICAgICAgICAgISFzdWJyb3dbY29sdW1uS2V5ICsgXCJfTUlOXCJdID8gXCJtaW4tdmFsdWVcIiA6IFwiXCIsXG4gICAgICAgICAgICAgICAgICBdLFxuICAgICAgICAgICAgICAgICAgc3R5bGU6IHt9LFxuICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgcm9sZTogXCJjZWxsXCIgfSxcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIFtcbiAgICAgICAgICAgICAgICAgIGNvbHVtbktleSA9PT0gXCJkYXRlXCJcbiAgICAgICAgICAgICAgICAgICAgPyBfYyhcImRpdlwiLCB7IHN0YXRpY0NsYXNzOiBcImp1c3RpZnktc3RhcnQgZC1mbGV4XCIgfSwgW1xuICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KFxuICAgICAgICAgICAgICAgICAgICAgICAgICBcIlxcbiAgICAgICAgICAgICAgXCIgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fcyhfdm0uX2YoXCJzaG9ydFdvcmREYXRlXCIpKHN1YnJvd1tjb2x1bW5LZXldKSkgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiXFxuICAgICAgICAgIFwiXG4gICAgICAgICAgICAgICAgICAgICAgICApLFxuICAgICAgICAgICAgICAgICAgICAgIF0pXG4gICAgICAgICAgICAgICAgICAgIDogY29sdW1uS2V5ID09PSBcIm5hbWVcIlxuICAgICAgICAgICAgICAgICAgICA/IF9jKFwiZGl2XCIsIHsgc3RhdGljQ2xhc3M6IFwianVzdGlmeS1zdGFydCBkLWZsZXhcIiB9LCBbXG4gICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoXG4gICAgICAgICAgICAgICAgICAgICAgICAgIFwiXFxuICAgICAgICAgICAgICBcIiArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl9zKHN1YnJvd1tjb2x1bW5LZXldKSArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJcXG4gICAgICAgICAgXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICksXG4gICAgICAgICAgICAgICAgICAgICAgXSlcbiAgICAgICAgICAgICAgICAgICAgOiBjb2x1bW5LZXkgPT09IFwiPlwiXG4gICAgICAgICAgICAgICAgICAgID8gX2MoXCJkaXZcIiwgeyBzdGF0aWNDbGFzczogXCJmb2xkZWRcIiB9LCBbXG4gICAgICAgICAgICAgICAgICAgICAgICBzdWJyb3cuaGFzRGF0YVxuICAgICAgICAgICAgICAgICAgICAgICAgICA/IF9jKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJhXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7IGhyZWY6IFwiI1wiIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xpY2s6IGZ1bmN0aW9uICgkZXZlbnQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRldmVudC5wcmV2ZW50RGVmYXVsdCgpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gX3ZtLmZvbGRlZFRvZ2dsZSgpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBbXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5mb2xkZWRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA/IF9jKFwidi1pY29uXCIsIFtfdm0uX3YoXCJtZGktbWVudS1yaWdodFwiKV0pXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgOiBfdm0uX2UoKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KFwiIFwiKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIV92bS5mb2xkZWRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA/IF9jKFwidi1pY29uXCIsIFtfdm0uX3YoXCJtZGktbWVudS1kb3duXCIpXSlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA6IF92bS5fZSgpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDFcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDogX3ZtLl9lKCksXG4gICAgICAgICAgICAgICAgICAgICAgXSlcbiAgICAgICAgICAgICAgICAgICAgOiAoc3Vicm93LkN1cnJlbmN5IHx8IHN1YnJvdy50eXBlID09PSBcInRvdGFsXCIpICYmXG4gICAgICAgICAgICAgICAgICAgICAgKHN1YnJvdy5EaXNwbGF5ID09PSBcIlNwcmVhZFwiIHx8XG4gICAgICAgICAgICAgICAgICAgICAgICBzdWJyb3cuRGlzcGxheSA9PT0gXCIzTUxTcHJlYWRcIilcbiAgICAgICAgICAgICAgICAgICAgPyBfYyhcImRpdlwiLCBbXG4gICAgICAgICAgICAgICAgICAgICAgICBwYXJzZUludChzdWJyb3dbY29sdW1uS2V5XSkgPiAwXG4gICAgICAgICAgICAgICAgICAgICAgICAgID8gX2MoXCJzcGFuXCIsIFtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fdihcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJcXG4gICAgICAgICAgICAgICAgICArXCIgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fcyhzdWJyb3dbY29sdW1uS2V5XSkgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiYnBcXG4gICAgICAgICAgICAgIFwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICApLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIF0pXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDogcGFyc2VJbnQoc3Vicm93W2NvbHVtbktleV0pIDwgMFxuICAgICAgICAgICAgICAgICAgICAgICAgICA/IF9jKFwic3BhblwiLCBbXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiXFxuICAgICAgICAgICAgICAgICAgLVwiICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3Moc3Vicm93W2NvbHVtbktleV0pICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcImJwXFxuICAgICAgICAgICAgICBcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBdKVxuICAgICAgICAgICAgICAgICAgICAgICAgICA6IF92bS5fZSgpLFxuICAgICAgICAgICAgICAgICAgICAgIF0pXG4gICAgICAgICAgICAgICAgICAgIDogKHN1YnJvdy5DdXJyZW5jeSB8fCBzdWJyb3cudHlwZSA9PT0gXCJ0b3RhbFwiKSAmJlxuICAgICAgICAgICAgICAgICAgICAgIHN1YnJvd1tjb2x1bW5LZXldXG4gICAgICAgICAgICAgICAgICAgID8gX2MoXCJkaXZcIiwgW1xuICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KFxuICAgICAgICAgICAgICAgICAgICAgICAgICBcIlxcbiAgICAgICAgICAgICAgXCIgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fcyhOdW1iZXIoc3Vicm93W2NvbHVtbktleV0pLnRvRml4ZWQoMykpICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcIiVcXG4gICAgICAgICAgXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICksXG4gICAgICAgICAgICAgICAgICAgICAgXSlcbiAgICAgICAgICAgICAgICAgICAgOiBfdm0uX2UoKSxcbiAgICAgICAgICAgICAgICBdXG4gICAgICAgICAgICAgIClcbiAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgMFxuICAgICAgICAgIClcbiAgICAgICAgfSksXG4gICAgICAgIDBcbiAgICAgIClcbiAgICA6IF92bS5fZSgpXG59XG52YXIgc3RhdGljUmVuZGVyRm5zID0gW11cbnJlbmRlci5fd2l0aFN0cmlwcGVkID0gdHJ1ZVxuXG5leHBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9IiwidmFyICRwbGFjZWhvbGRlciA9IFN5bWJvbCgpO1xuXG52YXIgJGZha2VQYXJlbnQgPSBTeW1ib2woKTtcblxudmFyIG5leHRTaWJsaW5nUGF0Y2hlZCA9IFN5bWJvbCgpO1xuXG52YXIgY2hpbGROb2Rlc1BhdGNoZWQgPSBTeW1ib2woKTtcblxudmFyIGlzRnJhZyA9IGZ1bmN0aW9uIGlzRnJhZyhub2RlKSB7XG4gICAgcmV0dXJuIFwiZnJhZ1wiIGluIG5vZGU7XG59O1xuXG5mdW5jdGlvbiBwYXRjaFBhcmVudE5vZGUobm9kZSwgZmFrZVBhcmVudCkge1xuICAgIGlmICgkZmFrZVBhcmVudCBpbiBub2RlKSB7XG4gICAgICAgIHJldHVybjtcbiAgICB9XG4gICAgbm9kZVskZmFrZVBhcmVudF0gPSBmYWtlUGFyZW50O1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShub2RlLCBcInBhcmVudE5vZGVcIiwge1xuICAgICAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzWyRmYWtlUGFyZW50XSB8fCB0aGlzLnBhcmVudEVsZW1lbnQ7XG4gICAgICAgIH1cbiAgICB9KTtcbn1cblxuZnVuY3Rpb24gcGF0Y2hOZXh0U2libGluZyhub2RlKSB7XG4gICAgaWYgKG5leHRTaWJsaW5nUGF0Y2hlZCBpbiBub2RlKSB7XG4gICAgICAgIHJldHVybjtcbiAgICB9XG4gICAgbm9kZVtuZXh0U2libGluZ1BhdGNoZWRdID0gdHJ1ZTtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkobm9kZSwgXCJuZXh0U2libGluZ1wiLCB7XG4gICAgICAgIGdldDogZnVuY3Rpb24gZ2V0KCkge1xuICAgICAgICAgICAgdmFyIGNoaWxkTm9kZXMgPSB0aGlzLnBhcmVudE5vZGUuY2hpbGROb2RlcztcbiAgICAgICAgICAgIHZhciBpbmRleCA9IGNoaWxkTm9kZXMuaW5kZXhPZih0aGlzKTtcbiAgICAgICAgICAgIGlmIChpbmRleCA+IC0xKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGNoaWxkTm9kZXNbaW5kZXggKyAxXSB8fCBudWxsO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgIH1cbiAgICB9KTtcbn1cblxuZnVuY3Rpb24gZ2V0VG9wRnJhZ21lbnQobm9kZSwgZnJvbVBhcmVudCkge1xuICAgIHdoaWxlIChub2RlLnBhcmVudE5vZGUgIT09IGZyb21QYXJlbnQpIHtcbiAgICAgICAgdmFyIF9ub2RlID0gbm9kZSwgcGFyZW50Tm9kZSA9IF9ub2RlLnBhcmVudE5vZGU7XG4gICAgICAgIGlmIChwYXJlbnROb2RlKSB7XG4gICAgICAgICAgICBub2RlID0gcGFyZW50Tm9kZTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gbm9kZTtcbn1cblxudmFyIGdldENoaWxkTm9kZXM7XG5cbmZ1bmN0aW9uIGdldENoaWxkTm9kZXNXaXRoRnJhZ21lbnRzKG5vZGUpIHtcbiAgICBpZiAoIWdldENoaWxkTm9kZXMpIHtcbiAgICAgICAgdmFyIGNoaWxkTm9kZXNEZXNjcmlwdG9yID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihOb2RlLnByb3RvdHlwZSwgXCJjaGlsZE5vZGVzXCIpO1xuICAgICAgICBnZXRDaGlsZE5vZGVzID0gY2hpbGROb2Rlc0Rlc2NyaXB0b3IuZ2V0O1xuICAgIH1cbiAgICB2YXIgcmVhbENoaWxkTm9kZXMgPSBnZXRDaGlsZE5vZGVzLmFwcGx5KG5vZGUpO1xuICAgIHZhciBjaGlsZE5vZGVzID0gQXJyYXkuZnJvbShyZWFsQ2hpbGROb2RlcykubWFwKChmdW5jdGlvbihjaGlsZE5vZGUpIHtcbiAgICAgICAgcmV0dXJuIGdldFRvcEZyYWdtZW50KGNoaWxkTm9kZSwgbm9kZSk7XG4gICAgfSkpO1xuICAgIHJldHVybiBjaGlsZE5vZGVzLmZpbHRlcigoZnVuY3Rpb24oY2hpbGROb2RlLCBpbmRleCkge1xuICAgICAgICByZXR1cm4gY2hpbGROb2RlICE9PSBjaGlsZE5vZGVzW2luZGV4IC0gMV07XG4gICAgfSkpO1xufVxuXG5mdW5jdGlvbiBwYXRjaENoaWxkTm9kZXMobm9kZSkge1xuICAgIGlmIChjaGlsZE5vZGVzUGF0Y2hlZCBpbiBub2RlKSB7XG4gICAgICAgIHJldHVybjtcbiAgICB9XG4gICAgbm9kZVtjaGlsZE5vZGVzUGF0Y2hlZF0gPSB0cnVlO1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKG5vZGUsIHtcbiAgICAgICAgY2hpbGROb2Rlczoge1xuICAgICAgICAgICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuZnJhZyB8fCBnZXRDaGlsZE5vZGVzV2l0aEZyYWdtZW50cyh0aGlzKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgZmlyc3RDaGlsZDoge1xuICAgICAgICAgICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuY2hpbGROb2Rlc1swXSB8fCBudWxsO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfSk7XG4gICAgbm9kZS5oYXNDaGlsZE5vZGVzID0gZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmNoaWxkTm9kZXMubGVuZ3RoID4gMDtcbiAgICB9O1xufVxuXG5mdW5jdGlvbiBiZWZvcmUoKSB7XG4gICAgdmFyIF90aGlzJGZyYWckO1xuICAgIChfdGhpcyRmcmFnJCA9IHRoaXMuZnJhZ1swXSkuYmVmb3JlLmFwcGx5KF90aGlzJGZyYWckLCBhcmd1bWVudHMpO1xufVxuXG5mdW5jdGlvbiByZW1vdmUoKSB7XG4gICAgdmFyIGZyYWcgPSB0aGlzLmZyYWc7XG4gICAgdmFyIHJlbW92ZWQgPSBmcmFnLnNwbGljZSgwLCBmcmFnLmxlbmd0aCk7XG4gICAgcmVtb3ZlZC5mb3JFYWNoKChmdW5jdGlvbihub2RlKSB7XG4gICAgICAgIG5vZGUucmVtb3ZlKCk7XG4gICAgfSkpO1xufVxuXG52YXIgZ2V0RnJhZ21lbnRMZWFmTm9kZXMgPSBmdW5jdGlvbiBnZXRGcmFnbWVudExlYWZOb2RlcyhjaGlsZHJlbikge1xuICAgIHZhciBfQXJyYXkkcHJvdG90eXBlO1xuICAgIHJldHVybiAoX0FycmF5JHByb3RvdHlwZSA9IEFycmF5LnByb3RvdHlwZSkuY29uY2F0LmFwcGx5KF9BcnJheSRwcm90b3R5cGUsIGNoaWxkcmVuLm1hcCgoZnVuY3Rpb24oY2hpbGROb2RlKSB7XG4gICAgICAgIHJldHVybiBpc0ZyYWcoY2hpbGROb2RlKSA/IGdldEZyYWdtZW50TGVhZk5vZGVzKGNoaWxkTm9kZS5mcmFnKSA6IGNoaWxkTm9kZTtcbiAgICB9KSkpO1xufTtcblxuZnVuY3Rpb24gYWRkUGxhY2Vob2xkZXIobm9kZSwgaW5zZXJ0QmVmb3JlTm9kZSkge1xuICAgIHZhciBwbGFjZWhvbGRlciA9IG5vZGVbJHBsYWNlaG9sZGVyXTtcbiAgICBpbnNlcnRCZWZvcmVOb2RlLmJlZm9yZShwbGFjZWhvbGRlcik7XG4gICAgcGF0Y2hQYXJlbnROb2RlKHBsYWNlaG9sZGVyLCBub2RlKTtcbiAgICBub2RlLmZyYWcudW5zaGlmdChwbGFjZWhvbGRlcik7XG59XG5cbmZ1bmN0aW9uIHJlbW92ZUNoaWxkKG5vZGUpIHtcbiAgICBpZiAoaXNGcmFnKHRoaXMpKSB7XG4gICAgICAgIHZhciBoYXNDaGlsZEluRnJhZ21lbnQgPSB0aGlzLmZyYWcuaW5kZXhPZihub2RlKTtcbiAgICAgICAgaWYgKGhhc0NoaWxkSW5GcmFnbWVudCA+IC0xKSB7XG4gICAgICAgICAgICB2YXIgX3RoaXMkZnJhZyRzcGxpY2UgPSB0aGlzLmZyYWcuc3BsaWNlKGhhc0NoaWxkSW5GcmFnbWVudCwgMSksIHJlbW92ZWROb2RlID0gX3RoaXMkZnJhZyRzcGxpY2VbMF07XG4gICAgICAgICAgICBpZiAodGhpcy5mcmFnLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICAgICAgICAgIGFkZFBsYWNlaG9sZGVyKHRoaXMsIHJlbW92ZWROb2RlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIG5vZGUucmVtb3ZlKCk7XG4gICAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgICB2YXIgY2hpbGRyZW4gPSBnZXRDaGlsZE5vZGVzV2l0aEZyYWdtZW50cyh0aGlzKTtcbiAgICAgICAgdmFyIGhhc0NoaWxkID0gY2hpbGRyZW4uaW5kZXhPZihub2RlKTtcbiAgICAgICAgaWYgKGhhc0NoaWxkID4gLTEpIHtcbiAgICAgICAgICAgIG5vZGUucmVtb3ZlKCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIG5vZGU7XG59XG5cbmZ1bmN0aW9uIGluc2VydEJlZm9yZShpbnNlcnROb2RlLCBpbnNlcnRCZWZvcmVOb2RlKSB7XG4gICAgdmFyIF90aGlzID0gdGhpcztcbiAgICB2YXIgaW5zZXJ0Tm9kZXMgPSBpbnNlcnROb2RlLmZyYWcgfHwgWyBpbnNlcnROb2RlIF07XG4gICAgaWYgKGlzRnJhZyh0aGlzKSkge1xuICAgICAgICB2YXIgX2ZyYWcgPSB0aGlzLmZyYWc7XG4gICAgICAgIGlmIChpbnNlcnRCZWZvcmVOb2RlKSB7XG4gICAgICAgICAgICB2YXIgaW5kZXggPSBfZnJhZy5pbmRleE9mKGluc2VydEJlZm9yZU5vZGUpO1xuICAgICAgICAgICAgaWYgKGluZGV4ID4gLTEpIHtcbiAgICAgICAgICAgICAgICBfZnJhZy5zcGxpY2UuYXBwbHkoX2ZyYWcsIFsgaW5kZXgsIDAgXS5jb25jYXQoaW5zZXJ0Tm9kZXMpKTtcbiAgICAgICAgICAgICAgICBpbnNlcnRCZWZvcmVOb2RlLmJlZm9yZS5hcHBseShpbnNlcnRCZWZvcmVOb2RlLCBpbnNlcnROb2Rlcyk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB2YXIgX2xhc3ROb2RlID0gX2ZyYWdbX2ZyYWcubGVuZ3RoIC0gMV07XG4gICAgICAgICAgICBfZnJhZy5wdXNoLmFwcGx5KF9mcmFnLCBpbnNlcnROb2Rlcyk7XG4gICAgICAgICAgICBfbGFzdE5vZGUuYWZ0ZXIuYXBwbHkoX2xhc3ROb2RlLCBpbnNlcnROb2Rlcyk7XG4gICAgICAgIH1cbiAgICAgICAgcmVtb3ZlUGxhY2Vob2xkZXIodGhpcyk7XG4gICAgfSBlbHNlIGlmIChpbnNlcnRCZWZvcmVOb2RlKSB7XG4gICAgICAgIGlmICh0aGlzLmNoaWxkTm9kZXMuaW5jbHVkZXMoaW5zZXJ0QmVmb3JlTm9kZSkpIHtcbiAgICAgICAgICAgIGluc2VydEJlZm9yZU5vZGUuYmVmb3JlLmFwcGx5KGluc2VydEJlZm9yZU5vZGUsIGluc2VydE5vZGVzKTtcbiAgICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICAgIHRoaXMuYXBwZW5kLmFwcGx5KHRoaXMsIGluc2VydE5vZGVzKTtcbiAgICB9XG4gICAgaW5zZXJ0Tm9kZXMuZm9yRWFjaCgoZnVuY3Rpb24obm9kZSkge1xuICAgICAgICBwYXRjaFBhcmVudE5vZGUobm9kZSwgX3RoaXMpO1xuICAgIH0pKTtcbiAgICB2YXIgbGFzdE5vZGUgPSBpbnNlcnROb2Rlc1tpbnNlcnROb2Rlcy5sZW5ndGggLSAxXTtcbiAgICBwYXRjaE5leHRTaWJsaW5nKGxhc3ROb2RlKTtcbiAgICByZXR1cm4gaW5zZXJ0Tm9kZTtcbn1cblxuZnVuY3Rpb24gYXBwZW5kQ2hpbGQobm9kZSkge1xuICAgIHZhciBmcmFnID0gdGhpcy5mcmFnO1xuICAgIHZhciBsYXN0Q2hpbGQgPSBmcmFnW2ZyYWcubGVuZ3RoIC0gMV07XG4gICAgbGFzdENoaWxkLmFmdGVyKG5vZGUpO1xuICAgIHBhdGNoUGFyZW50Tm9kZShub2RlLCB0aGlzKTtcbiAgICByZW1vdmVQbGFjZWhvbGRlcih0aGlzKTtcbiAgICBmcmFnLnB1c2gobm9kZSk7XG4gICAgcmV0dXJuIG5vZGU7XG59XG5cbmZ1bmN0aW9uIHJlbW92ZVBsYWNlaG9sZGVyKG5vZGUpIHtcbiAgICB2YXIgcGxhY2Vob2xkZXIgPSBub2RlWyRwbGFjZWhvbGRlcl07XG4gICAgaWYgKG5vZGUuZnJhZ1swXSA9PT0gcGxhY2Vob2xkZXIpIHtcbiAgICAgICAgbm9kZS5mcmFnLnNoaWZ0KCk7XG4gICAgICAgIHBsYWNlaG9sZGVyLnJlbW92ZSgpO1xuICAgIH1cbn1cblxudmFyIGZyYWcgPSB7XG4gICAgaW5zZXJ0ZWQ6IGZ1bmN0aW9uIGluc2VydGVkKGVsZW1lbnQpIHtcbiAgICAgICAgdmFyIHBhcmVudE5vZGUgPSBlbGVtZW50LnBhcmVudE5vZGUsIG5leHRTaWJsaW5nID0gZWxlbWVudC5uZXh0U2libGluZywgcHJldmlvdXNTaWJsaW5nID0gZWxlbWVudC5wcmV2aW91c1NpYmxpbmc7XG4gICAgICAgIHZhciBjaGlsZE5vZGVzID0gQXJyYXkuZnJvbShlbGVtZW50LmNoaWxkTm9kZXMpO1xuICAgICAgICB2YXIgcGxhY2Vob2xkZXIgPSBkb2N1bWVudC5jcmVhdGVDb21tZW50KFwiXCIpO1xuICAgICAgICBpZiAoY2hpbGROb2Rlcy5sZW5ndGggPT09IDApIHtcbiAgICAgICAgICAgIGNoaWxkTm9kZXMucHVzaChwbGFjZWhvbGRlcik7XG4gICAgICAgIH1cbiAgICAgICAgZWxlbWVudC5mcmFnID0gY2hpbGROb2RlcztcbiAgICAgICAgZWxlbWVudFskcGxhY2Vob2xkZXJdID0gcGxhY2Vob2xkZXI7XG4gICAgICAgIHZhciBmcmFnbWVudCA9IGRvY3VtZW50LmNyZWF0ZURvY3VtZW50RnJhZ21lbnQoKTtcbiAgICAgICAgZnJhZ21lbnQuYXBwZW5kLmFwcGx5KGZyYWdtZW50LCBnZXRGcmFnbWVudExlYWZOb2RlcyhjaGlsZE5vZGVzKSk7XG4gICAgICAgIGVsZW1lbnQucmVwbGFjZVdpdGgoZnJhZ21lbnQpO1xuICAgICAgICBjaGlsZE5vZGVzLmZvckVhY2goKGZ1bmN0aW9uKG5vZGUpIHtcbiAgICAgICAgICAgIHBhdGNoUGFyZW50Tm9kZShub2RlLCBlbGVtZW50KTtcbiAgICAgICAgICAgIHBhdGNoTmV4dFNpYmxpbmcobm9kZSk7XG4gICAgICAgIH0pKTtcbiAgICAgICAgcGF0Y2hDaGlsZE5vZGVzKGVsZW1lbnQpO1xuICAgICAgICBPYmplY3QuYXNzaWduKGVsZW1lbnQsIHtcbiAgICAgICAgICAgIHJlbW92ZTogcmVtb3ZlLFxuICAgICAgICAgICAgYXBwZW5kQ2hpbGQ6IGFwcGVuZENoaWxkLFxuICAgICAgICAgICAgaW5zZXJ0QmVmb3JlOiBpbnNlcnRCZWZvcmUsXG4gICAgICAgICAgICByZW1vdmVDaGlsZDogcmVtb3ZlQ2hpbGQsXG4gICAgICAgICAgICBiZWZvcmU6IGJlZm9yZVxuICAgICAgICB9KTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGVsZW1lbnQsIFwiaW5uZXJIVE1MXCIsIHtcbiAgICAgICAgICAgIHNldDogZnVuY3Rpb24gc2V0KGh0bWxTdHJpbmcpIHtcbiAgICAgICAgICAgICAgICB2YXIgX3RoaXMyID0gdGhpcztcbiAgICAgICAgICAgICAgICB2YXIgZG9taWZ5ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgICAgICAgICAgICAgICBkb21pZnkuaW5uZXJIVE1MID0gaHRtbFN0cmluZztcbiAgICAgICAgICAgICAgICB2YXIgb2xkTm9kZXNJbmRleCA9IHRoaXMuZnJhZy5sZW5ndGg7XG4gICAgICAgICAgICAgICAgQXJyYXkuZnJvbShkb21pZnkuY2hpbGROb2RlcykuZm9yRWFjaCgoZnVuY3Rpb24obm9kZSkge1xuICAgICAgICAgICAgICAgICAgICBfdGhpczIuYXBwZW5kQ2hpbGQobm9kZSk7XG4gICAgICAgICAgICAgICAgfSkpO1xuICAgICAgICAgICAgICAgIGRvbWlmeS5hcHBlbmQuYXBwbHkoZG9taWZ5LCB0aGlzLmZyYWcuc3BsaWNlKDAsIG9sZE5vZGVzSW5kZXgpKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gXCJcIjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICAgIGlmIChwYXJlbnROb2RlKSB7XG4gICAgICAgICAgICBPYmplY3QuYXNzaWduKHBhcmVudE5vZGUsIHtcbiAgICAgICAgICAgICAgICByZW1vdmVDaGlsZDogcmVtb3ZlQ2hpbGQsXG4gICAgICAgICAgICAgICAgaW5zZXJ0QmVmb3JlOiBpbnNlcnRCZWZvcmVcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgcGF0Y2hQYXJlbnROb2RlKGVsZW1lbnQsIHBhcmVudE5vZGUpO1xuICAgICAgICAgICAgcGF0Y2hDaGlsZE5vZGVzKHBhcmVudE5vZGUpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChuZXh0U2libGluZykge1xuICAgICAgICAgICAgcGF0Y2hOZXh0U2libGluZyhlbGVtZW50KTtcbiAgICAgICAgfVxuICAgICAgICBpZiAocHJldmlvdXNTaWJsaW5nKSB7XG4gICAgICAgICAgICBwYXRjaE5leHRTaWJsaW5nKHByZXZpb3VzU2libGluZyk7XG4gICAgICAgIH1cbiAgICB9LFxuICAgIHVuYmluZDogZnVuY3Rpb24gdW5iaW5kKGVsZW1lbnQpIHtcbiAgICAgICAgZWxlbWVudC5yZW1vdmUoKTtcbiAgICB9XG59O1xuXG52YXIgZnJhZ21lbnQgPSB7XG4gICAgbmFtZTogXCJGcmFnbWVudFwiLFxuICAgIGRpcmVjdGl2ZXM6IHtcbiAgICAgICAgZnJhZzogZnJhZ1xuICAgIH0sXG4gICAgcmVuZGVyOiBmdW5jdGlvbiByZW5kZXIoaCkge1xuICAgICAgICByZXR1cm4gaChcImRpdlwiLCB7XG4gICAgICAgICAgICBkaXJlY3RpdmVzOiBbIHtcbiAgICAgICAgICAgICAgICBuYW1lOiBcImZyYWdcIlxuICAgICAgICAgICAgfSBdXG4gICAgICAgIH0sIHRoaXMuJHNsb3RzW1wiZGVmYXVsdFwiXSk7XG4gICAgfVxufTtcblxuZXhwb3J0IHsgZnJhZ21lbnQgYXMgRnJhZ21lbnQsIGZyYWcgYXMgZGVmYXVsdCB9O1xuIiwiPHRlbXBsYXRlPlxuICA8RnJhZ21lbnQgbmFtZT1cImJvZHlcIiB2LWlmPVwicm93XCI+XG4gICAgPHRyIFxuICAgICAgICB2LWZvcj1cIihzdWJyb3csIHNyaSkgb2Ygc3Vicm93c1wiXG4gICAgICAgIDprZXk9XCJyb3cuaWQgKyAnXycgKyBzcmlcIlxuICAgICAgICA6Y2xhc3M9XCJ7XG4gICAgICAgICAgICAnaW5hY3RpdmUnOiAhc3Vicm93Lmhhc0RhdGEgJiYgc3Vicm93LnR5cGUgIT09ICdzdWJkYXRhJyAmJiBzdWJyb3cudHlwZSAhPT0gJ3RvdGFsJyxcbiAgICAgICAgICAgICdzdWJyb3cnOiBzdWJyb3cudHlwZSA9PT0gJ3N1YmRhdGEnLFxuICAgICAgICAgICAgJ3RvdGFsJzogc3Vicm93LnR5cGUgPT09ICd0b3RhbCcsXG4gICAgICAgICAgICAnbWFpbnJvdyc6IHN1YnJvdy50eXBlICE9PSAnc3ViZGF0YScsXG4gICAgICAgIH1cIlxuICAgICAgICByb2xlPVwicm93Z3JvdXBcIlxuICAgICAgICByZWY9XCJ0clJvd1wiXG4gICAgPlxuICAgICAgICA8dGRcbiAgICAgICAgICAgIHYtZm9yPVwiKGNvbHVtbktleSwgaW5kZXgpIG9mIGNvbHVtbnNLZXlPcmRlclwiXG4gICAgICAgICAgICA6Y2xhc3M9XCJbXG4gICAgICAgICAgICAgICAgY3VzdG9tQ2xhc3Nlcyhjb2x1bW5LZXkpLCBcbiAgICAgICAgICAgICAgICBuYW1lICsgJ18nICsgY29sdW1uS2V5ICsgJ19yb3dfY29sdW1uJyxcbiAgICAgICAgICAgICAgICAhIXN1YnJvd1tjb2x1bW5LZXkrJ19NSU4nXSA/ICdtaW4tdmFsdWUnIDogJycsXG4gICAgICAgICAgICBdXCJcbiAgICAgICAgICAgIDprZXk9XCJjb2x1bW5LZXkgKyAnXycgKyByb3cuaWQgKyAnXycgKyBzcmkgKyAnXycgKyBpbmRleFwiXG4gICAgICAgICAgICA6cmVmPVwiY29sdW1uS2V5XCJcbiAgICAgICAgICAgIDpzdHlsZT1cIntcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgIH1cIlxuICAgICAgICAgICAgcm9sZT1cImNlbGxcIlxuICAgICAgICA+XG4gICAgICAgICAgICA8ZGl2IHYtaWY9XCJjb2x1bW5LZXkgPT09ICdkYXRlJ1wiIGNsYXNzPVwianVzdGlmeS1zdGFydCBkLWZsZXhcIj5cbiAgICAgICAgICAgICAgICB7eyBzdWJyb3dbY29sdW1uS2V5XSB8IHNob3J0V29yZERhdGUgfX1cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPGRpdiB2LWVsc2UtaWY9XCJjb2x1bW5LZXkgPT09ICduYW1lJ1wiIGNsYXNzPVwianVzdGlmeS1zdGFydCBkLWZsZXhcIj5cbiAgICAgICAgICAgICAgICB7eyBzdWJyb3dbY29sdW1uS2V5XSB9fVxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8ZGl2IHYtZWxzZS1pZj1cImNvbHVtbktleSA9PT0gJz4nXCIgY2xhc3M9XCJmb2xkZWRcIj5cbiAgICAgICAgICAgICAgICA8YSAgdi1pZj1cInN1YnJvdy5oYXNEYXRhXCIgXG4gICAgICAgICAgICAgICAgICAgIGhyZWY9XCIjXCIgXG4gICAgICAgICAgICAgICAgICAgIEBjbGljay5wcmV2ZW50PVwiZm9sZGVkVG9nZ2xlKClcIlxuICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgICAgPHYtaWNvbiB2LWlmPVwiZm9sZGVkXCI+bWRpLW1lbnUtcmlnaHQ8L3YtaWNvbj5cbiAgICAgICAgICAgICAgICAgICAgPHYtaWNvbiB2LWlmPVwiIWZvbGRlZFwiPm1kaS1tZW51LWRvd248L3YtaWNvbj5cbiAgICAgICAgICAgICAgICA8L2E+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDxkaXYgdi1lbHNlLWlmPVwiKHN1YnJvdy5DdXJyZW5jeSB8fCBzdWJyb3cudHlwZSA9PT0gJ3RvdGFsJykgJiYgKHN1YnJvdy5EaXNwbGF5ID09PSAnU3ByZWFkJyB8fCBzdWJyb3cuRGlzcGxheSA9PT0gJzNNTFNwcmVhZCcpXCI+XG4gICAgICAgICAgICAgICAgPHNwYW4gdi1pZj1cInBhcnNlSW50KHN1YnJvd1tjb2x1bW5LZXldKSA+IDBcIj5cbiAgICAgICAgICAgICAgICAgICAgK3t7IHN1YnJvd1tjb2x1bW5LZXldIH19YnBcbiAgICAgICAgICAgICAgICA8L3NwYW4+XG4gICAgICAgICAgICAgICAgPHNwYW4gdi1lbHNlLWlmPVwicGFyc2VJbnQoc3Vicm93W2NvbHVtbktleV0pIDwgMFwiPlxuICAgICAgICAgICAgICAgICAgICAte3sgc3Vicm93W2NvbHVtbktleV0gfX1icFxuICAgICAgICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPGRpdiB2LWVsc2UtaWY9XCIoc3Vicm93LkN1cnJlbmN5IHx8IHN1YnJvdy50eXBlID09PSAndG90YWwnKSAmJiBzdWJyb3dbY29sdW1uS2V5XVwiPlxuICAgICAgICAgICAgICAgIHt7IE51bWJlcihzdWJyb3dbY29sdW1uS2V5XSkudG9GaXhlZCgzKSB9fSVcbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L3RkPlxuICAgIDwvdHI+XG4gIDwvRnJhZ21lbnQ+XG48L3RlbXBsYXRlPlxuXG48c2NyaXB0PlxuaW1wb3J0IHsgRnJhZ21lbnQgfSBmcm9tICd2dWUtZnJhZyc7XG5cbmV4cG9ydCBjb25zdCBjdXN0b21DbGFzc2VzID0gKGZpZWxkKSA9PiB7XG4gICAgY29uc3QgdHlwZUNsYXNzZXMgPSAoKGZpZWxkKSA9PiB7XG4gICAgICAgIHN3aXRjaCAoZmllbGQpIHtcbiAgICAgICAgICAgIC8vIGxlZnRcbiAgICAgICAgICAgIGNhc2UgJ25hbWUnOiBcbiAgICAgICAgICAgIGNhc2UgJ2RhdGUnOiBcbiAgICAgICAgICAgICAgICByZXR1cm4gJ3RkLXRleHQtbGVmdCc7XG4gICAgICAgICAgICAvLyByaWdodFxuICAgICAgICAgICAgLy9jYXNlICdkYXRlJzogcmV0dXJuICd0ZC10ZXh0LXJpZ2h0JztcbiAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgcmV0dXJuICd0ZC10ZXh0LWNlbnRlcic7XG4gICAgICAgIH1cbiAgICB9KShmaWVsZCk7XG4gICAgcmV0dXJuIHR5cGVDbGFzc2VzO1xufTtcblxuY29uc3QgY3VzdG9tV2lkdGggPSAoeyBmaWVsZCwgbmFtZSB9KSA9PiB7XG4gICAgc3dpdGNoIChmaWVsZCkge1xuICAgICAgICBjYXNlICdkYXRlJzogICAgICAgICAgICAgICAgICAgIHJldHVybiA4MDtcbiAgICAgICAgY2FzZSAnbmFtZSc6ICAgICAgICAgICAgICAgICAgICByZXR1cm4gMjAwO1xuICAgICAgICBkZWZhdWx0OiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiAxNTA7XG4gICAgfVxufTtcblxuXG5leHBvcnQgZGVmYXVsdCB7XG4gICAgY29tcG9uZW50czoge1xuICAgICAgICBGcmFnbWVudFxuICAgIH0sXG4gICAgcHJvcHM6IHtcbiAgICAgICAgcm93OiB7XG4gICAgICAgICAgICB0eXBlOiBPYmplY3QsXG4gICAgICAgICAgICByZXF1aXJlZDogdHJ1ZSxcbiAgICAgICAgfSxcbiAgICAgICAgcm93Q291bnQ6IHtcbiAgICAgICAgICAgIHR5cGU6IE51bWJlcixcbiAgICAgICAgfSxcbiAgICAgICAgY29sdW1uc0tleU9yZGVyOiB7XG4gICAgICAgICAgICB0eXBlOiBBcnJheSxcbiAgICAgICAgICAgIHJlcXVpcmVkOiB0cnVlLFxuICAgICAgICB9LFxuICAgICAgICBjb2x1bW5zS2V5T3JkZXJUeXBlOiB7XG4gICAgICAgICAgICB0eXBlOiBPYmplY3QsXG4gICAgICAgIH0sXG4gICAgICAgIG5hbWU6IHtcbiAgICAgICAgICAgIHR5cGU6IFN0cmluZyxcbiAgICAgICAgICAgIHJlcXVpcmVkOiB0cnVlLFxuICAgICAgICB9LFxuICAgICAgICBjb2x1bW5zV2lkdGg6IHtcbiAgICAgICAgICAgIHR5cGU6IEFycmF5LFxuICAgICAgICAgICAgcmVxdWlyZWQ6IHRydWUsXG4gICAgICAgIH0sXG4gICAgICAgIHNvcnRQYXJhbXM6IHtcbiAgICAgICAgICAgIHR5cGU6IE9iamVjdCxcbiAgICAgICAgfVxuICAgIH0sXG4gICAgZGF0YSAoKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBmb2xkZWQ6IHRydWUsXG4gICAgICAgICAgICBhZGRyb3dzOiBbXSxcbiAgICAgICAgfTtcbiAgICB9LFxuICAgIFxuICAgIGNvbXB1dGVkOiB7XG4gICAgICAgIHN1YnJvd3MgKCkge1xuICAgICAgICAgICAgcmV0dXJuIFt0aGlzLnJvdywgLi4udGhpcy5hZGRyb3dzXTtcbiAgICAgICAgfSxcbiAgICAgICAgRGlzcGxheToge1xuICAgICAgICAgICAgY2FjaGU6IGZhbHNlLFxuICAgICAgICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMucm93LkRpc3BsYXk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9LFxuXG4gICAgd2F0Y2g6IHtcbiAgICAgICAgJ3Jvdyc6IHsgXG4gICAgICAgICAgICBoYW5kbGVyIChuZXdWYWwsIG9sZFZhbCkge1xuICAgICAgICAgICAgICAgIHRoaXMuYWRkcm93cyA9IFtdO1xuICAgICAgICAgICAgICAgIGlmKCF0aGlzLmZvbGRlZCkge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLnVwZGF0ZURpc3BsYXkoKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9LFxuICAgICAgICB9LFxuICAgICAgICBzb3J0UGFyYW1zIChuZXdWYWwsIG9sZFZhbCkge1xuICAgICAgICAgICAgdGhpcy5mb2xkZWQgPSB0cnVlO1xuICAgICAgICAgICAgdGhpcy5hZGRyb3dzID0gW107XG4gICAgICAgIH0sXG4gICAgfSxcblxuICAgIG1ldGhvZHM6IHtcbiAgICAgICAgY3VzdG9tQ2xhc3NlcyxcblxuICAgICAgICBmb2xkZWRUb2dnbGUgKCkge1xuICAgICAgICAgICAgdGhpcy5mb2xkZWQgPSAhdGhpcy5mb2xkZWQ7XG4gICAgICAgICAgICB0aGlzLmFkZHJvd3MgPSBbXTtcbiAgICAgICAgICAgIGlmKCF0aGlzLmZvbGRlZCkge1xuICAgICAgICAgICAgICAgIHRoaXMudXBkYXRlRGlzcGxheSgpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICB1cGRhdGVEaXNwbGF5ICgpIHtcbiAgICAgICAgICAgIHRoaXMuYWRkcm93cyA9IFtdO1xuICAgICAgICAgICAgaWYoIXRoaXMucm93Lmdyb3Vwcyl7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdGhpcy5yb3cuZ3JvdXBzLmZvckVhY2goKGcsIGdpKSA9PiB7XG4gICAgICAgICAgICAgICAgaWYgKGcubmFtZSA9PT0gdGhpcy5yb3cuRGlzcGxheSkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHRoaXMuYWRkcm93cy5wdXNoKGcpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0sXG4gICAgfSxcbn07XG48L3NjcmlwdD5cblxuPHN0eWxlIGxhbmc9XCJzY3NzXCI+XG5cbiAgICB0ciB7XG4gICAgICAgIHRyYW5zaXRpb246IGFsbCAwLjJzO1xuICAgICAgICBib3JkZXItdG9wOiAxcHggc29saWQgJHRhYmxlLWJvcmRlcjtcbiAgICAgICAgJjpob3ZlciB7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkdGFibGUtcm93LWJnLWhvdmVyICFpbXBvcnRhbnQ7XG4gICAgICAgICAgICAudGV4dC1ibHVlIHtcbiAgICAgICAgICAgICAgICBjb2xvcjogJGFjdGl2ZS10ZXh0O1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgICY6bnRoLWNoaWxkKGV2ZW4pIHtcbiAgICAgICAgICAgIGJhY2tncm91bmQ6ICR0YWJsZS1yb3ctYmctZXZlbjtcbiAgICAgICAgfVxuICAgICAgICAmOm50aC1jaGlsZChvZGQpIHtcbiAgICAgICAgICAgIGJhY2tncm91bmQ6ICR0YWJsZS1yb3ctYmctb2RkO1xuICAgICAgICB9XG4gICAgICAgICYuaW5hY3RpdmUge1xuICAgICAgICAgICAgY29sb3I6ICRpbmFjdGl2ZS10ZXh0O1xuICAgICAgICB9XG4gICAgICAgICY6Zmlyc3QtY2hpbGQge1xuICAgICAgICAgICAgYm9yZGVyLXRvcDogMDtcbiAgICAgICAgfVxuICAgICAgICAmLm1haW5yb3cge1xuICAgICAgICAgICAgdGQuSW50ZXJQcmljZV9uYW1lX3Jvd19jb2x1bW4ge1xuICAgICAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgICYuc3Vicm93IHtcbiAgICAgICAgICAgIFxuICAgICAgICB9XG4gICAgICAgICYudG90YWwge1xuICAgICAgICAgICAgYm9yZGVyOiAxcHggc29saWQgJHRhYmxlLWhlYWRlci1ib3JkZXI7XG4gICAgICAgICAgICB0ZC5JbnRlclByaWNlX25hbWVfcm93X2NvbHVtbiB7XG4gICAgICAgICAgICAgICAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIHRkIHtcbiAgICAgICAgYm9yZGVyOiAwO1xuICAgICAgICBwYWRkaW5nOiAwLjVlbSAwLjJlbTtcbiAgICAgICAgJi50ZC10ZXh0LWNlbnRlciB7XG4gICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICAgIH1cbiAgICAgICAgJi50ZC10ZXh0LXJpZ2h0IHtcbiAgICAgICAgICAgIHRleHQtYWxpZ246IHJpZ2h0O1xuICAgICAgICB9XG4gICAgfVxuICAgIC5mb2xkZWQge1xuICAgICAgICBhIHtcbiAgICAgICAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICAgICAgfVxuICAgIH1cbiAgICAubWluLXZhbHVlIHtcbiAgICAgICAgYmFja2dyb3VuZDogI0Y0RjJEOTtcbiAgICB9XG5cbiAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6ICRzaXplX21vYmlsZSkge1xuICAgICAgICB0ZCB7XG4gICAgICAgICAgICB3aWR0aDogYXV0bztcbiAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICAgICAgYm9yZGVyOiAwO1xuICAgICAgICAgICAgYm9yZGVyLWxlZnQ6IHNvbGlkIDFweCAkdGFibGUtYm9yZGVyO1xuICAgICAgICAgICAgYm9yZGVyLXJpZ2h0OiBzb2xpZCAxcHggJHRhYmxlLWJvcmRlcjtcbiAgICAgICAgICAgIGJvcmRlci1ib3R0b206IHNvbGlkIDFweCAkdGFibGUtYm9yZGVyO1xuICAgICAgICB9XG4gICAgICAgIC5mbGV4LXJvdyB7XG4gICAgICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgfVxuICAgIH1cbjwvc3R5bGU+XG4iLCJpbXBvcnQgbW9kIGZyb20gXCItIS4uLy4uL25vZGVfbW9kdWxlcy9iYWJlbC1sb2FkZXIvbGliL2luZGV4LmpzIS4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vQXBwVGFibGVSb3cudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJlwiOyBleHBvcnQgZGVmYXVsdCBtb2Q7IGV4cG9ydCAqIGZyb20gXCItIS4uLy4uL25vZGVfbW9kdWxlcy9iYWJlbC1sb2FkZXIvbGliL2luZGV4LmpzIS4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vQXBwVGFibGVSb3cudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJlwiIiwiaW1wb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfSBmcm9tIFwiLi9BcHBUYWJsZVJvdy52dWU/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9Y2FmZmY3ZTAmXCJcbmltcG9ydCBzY3JpcHQgZnJvbSBcIi4vQXBwVGFibGVSb3cudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJlwiXG5leHBvcnQgKiBmcm9tIFwiLi9BcHBUYWJsZVJvdy52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCJcbmltcG9ydCBzdHlsZTAgZnJvbSBcIi4vQXBwVGFibGVSb3cudnVlP3Z1ZSZ0eXBlPXN0eWxlJmluZGV4PTAmaWQ9Y2FmZmY3ZTAmcHJvZCZsYW5nPXNjc3MmXCJcblxuXG4vKiBub3JtYWxpemUgY29tcG9uZW50ICovXG5pbXBvcnQgbm9ybWFsaXplciBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9ydW50aW1lL2NvbXBvbmVudE5vcm1hbGl6ZXIuanNcIlxudmFyIGNvbXBvbmVudCA9IG5vcm1hbGl6ZXIoXG4gIHNjcmlwdCxcbiAgcmVuZGVyLFxuICBzdGF0aWNSZW5kZXJGbnMsXG4gIGZhbHNlLFxuICBudWxsLFxuICBudWxsLFxuICBudWxsXG4gIFxuKVxuXG5leHBvcnQgZGVmYXVsdCBjb21wb25lbnQuZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7QUNoSUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUN4TUE7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFSQTtBQVVBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQUE7QUFBQTtBQUNBO0FBQUE7QUFBQTtBQUhBO0FBS0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQURBO0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFGQTtBQUlBO0FBQ0E7QUFEQTtBQUdBO0FBQ0E7QUFDQTtBQUZBO0FBSUE7QUFDQTtBQURBO0FBR0E7QUFDQTtBQUNBO0FBRkE7QUFJQTtBQUNBO0FBQ0E7QUFGQTtBQUlBO0FBQ0E7QUFEQTtBQXZCQTtBQUNBO0FBMEJBO0FBQ0E7QUFDQTtBQUNBO0FBRkE7QUFJQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFKQTtBQUpBO0FBWUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFQQTtBQUNBO0FBT0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQWJBO0FBZUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUF0QkE7QUFqRUE7O0FDdkZBOzs7Ozs7Ozs7O0FDQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///438\n')}}]);